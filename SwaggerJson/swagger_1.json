{
  "openapi": "3.0.1",
  "info": {
    "title": "DonorApp API",
    "version": "v1"
  },
  "paths": {
    "/api/v1/badge": {
      "post": {
        "tags": [
          "Badge"
        ],
        "summary": "Allows you to add a new badge.",
        "requestBody": {
          "description": "The DonorApp.Services.DTO.BadgeDto instance that represents a badge to add.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BadgeDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BadgeDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BadgeDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Badge successfully added.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad request! See json response for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error! See json response for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Badge"
        ],
        "summary": "Allows you to edit a badge.",
        "requestBody": {
          "description": "The DonorApp.Services.DTO.BadgeDto instance that represents a badge to edit.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BadgeDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BadgeDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BadgeDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Badge successfully edited.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad request! See json response for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error! See json response for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/badges": {
      "get": {
        "tags": [
          "Badge"
        ],
        "summary": "Badges list",
        "responses": {
          "200": {
            "description": "Returns collection of badges.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BadgeDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BadgeDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BadgeDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request! See json response for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error! See json response for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/badge/{badgeId}": {
      "delete": {
        "tags": [
          "Badge"
        ],
        "summary": "Allows to delete a badge.",
        "parameters": [
          {
            "name": "badgeId",
            "in": "path",
            "description": "The M:DonorAppCore.Controllers.BadgeController.DeleteBadgeAsync(System.Int32) instance that represents a badge id for delete.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Badge successfully deleted.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad request! See json response for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error! See json response for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/donations": {
      "post": {
        "tags": [
          "Donation"
        ],
        "summary": "Donations list",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DonationFilter"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DonationFilter"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DonationFilter"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns collection of donations.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DonationDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DonationDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DonationDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request! See json response for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error! See json response for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/donations/{userId}": {
      "post": {
        "tags": [
          "Donation"
        ],
        "summary": "Donations by user's id",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns collection of donations.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DonationDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DonationDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DonationDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request! See json response for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error! See json response for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/donation": {
      "post": {
        "tags": [
          "Donation"
        ],
        "summary": "Allows you to add a new donation.",
        "requestBody": {
          "description": "The DonorApp.Services.DTO.DonationDto instance that represents a donation type to add.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DonationDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DonationDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DonationDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Donation successfully added.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad request! See json response for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error! See json response for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Donation"
        ],
        "summary": "Allows you to edit donation.",
        "requestBody": {
          "description": "The DonorApp.Services.DTO.DonationDto instance that represents a donation to edit.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DonationDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DonationDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DonationDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Donation successfully edited.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad request! See json response for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error! See json response for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/donation/xlsx": {
      "post": {
        "tags": [
          "Donation"
        ],
        "summary": "Returns xlsx file wirth donations",
        "requestBody": {
          "description": "The DonorApp.DataProvider.Entities.Filters.DonationFilter instance that represents a donation filter.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DonationFilter"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DonationFilter"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DonationFilter"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns xlsx file with donations"
          },
          "400": {
            "description": "Bad request! See json response for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error! See json response for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/donation/csv": {
      "post": {
        "tags": [
          "Donation"
        ],
        "summary": "Returns csv file wirth donations",
        "requestBody": {
          "description": "The DonorApp.DataProvider.Entities.Filters.DonationFilter instance that represents a donation filter",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DonationFilter"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DonationFilter"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DonationFilter"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns xlsx file with donations"
          },
          "400": {
            "description": "Bad request! See json response for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error! See json response for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/QuickComments": {
      "post": {
        "tags": [
          "Donation"
        ],
        "summary": "Get QuickComment by category",
        "parameters": [
          {
            "name": "quickCommentCategory",
            "in": "query",
            "description": "There are such categories: 1 - Reasons for cancellation of the donation, 2 - Quick comments about experience of the donation.",
            "schema": {
              "$ref": "#/components/schemas/QuickCommentCategory"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns collection of QuickComments.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/QuickCommentDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/QuickCommentDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/QuickCommentDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request! See json responce for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error! See json responce for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/donation/confirm": {
      "put": {
        "tags": [
          "Donation"
        ],
        "summary": "Allows you to confirm donation.",
        "requestBody": {
          "description": "The DonorApp.Services.DTO.DonationDto instance that represents a donation to confirm.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DonationDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DonationDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DonationDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Donation successfully confirmed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad request! See json response for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error! See json response for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/donationCenters": {
      "get": {
        "tags": [
          "DonationCenter"
        ],
        "summary": "Gets all donation centeres",
        "parameters": [
          {
            "name": "donationCenterName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "regionId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "cityId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Collection of donation centers.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DonationCenterDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DonationCenterDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DonationCenterDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request! See json response for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error! See json response for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "DonationCenter"
        ],
        "summary": "Add Donation center",
        "requestBody": {
          "description": "The DonorApp.Services.DTO.DonationCenterDto instance to create.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DonationCenterDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DonationCenterDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DonationCenterDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "DonationCenter created.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DonationCenterDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DonationCenterDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DonationCenterDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request! See json response for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error! See json response for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "DonationCenter"
        ],
        "summary": "Allows to delete a donation center.",
        "parameters": [
          {
            "name": "donationCenterId",
            "in": "query",
            "description": "The M:DonorAppCore.Controllers.DonationCenterController.DeleteDonationCenter(System.Int32) instance that represents a donation center id for delete.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Donation center successfully deleted.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad request! See json response for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error! See json response for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "DonationCenter"
        ],
        "summary": "Allows to edit a donation center",
        "requestBody": {
          "description": "The DonorApp.Services.DTO.DonationCenterDto instance that represents a donation center to edit.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DonationCenterDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DonationCenterDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DonationCenterDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Donation center was successfully edited.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DonationCenterDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DonationCenterDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DonationCenterDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request! See json response for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error! See json response for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/donation/types": {
      "get": {
        "tags": [
          "DonationTypes"
        ],
        "summary": "Gets all donation types",
        "responses": {
          "200": {
            "description": "Collection of donation types.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DonationTypeDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DonationTypeDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DonationTypeDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error! See json response for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "DonationTypes"
        ],
        "summary": "Allows you to add a new donation type.",
        "requestBody": {
          "description": "The DonorApp.Services.DTO.DonationTypeDto instance that represents a donation type to add.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DonationTypeDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DonationTypeDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DonationTypeDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Donation type successfully added.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad request! See json response for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error! See json response for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "DonationTypes"
        ],
        "summary": "Allows to edit a donation type.",
        "requestBody": {
          "description": "The DonorApp.Services.DTO.DonationTypeDto instance that represents a donation type to edit.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DonationTypeDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DonationTypeDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DonationTypeDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Donation type successfully edited.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad request! See json response for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error! See json response for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/donation/types/{id}": {
      "delete": {
        "tags": [
          "DonationTypes"
        ],
        "summary": "Allows to delete a donation type.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The M:DonorAppCore.Controllers.DonationTypesController.DeleteDonationType(System.Int32) instance that represents a donation type id for delete.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Donation type successfully deleted.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DonationTypeDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DonationTypeDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DonationTypeDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request! See json response for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error! See json response for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/faqs": {
      "post": {
        "tags": [
          "Faq"
        ],
        "summary": "Add new FAQ article.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FaqArticleDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/FaqArticleDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/FaqArticleDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "FAQ article was added successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FaqArticleDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FaqArticleDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FaqArticleDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request! See json response for details",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error! See json response for details",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Faq"
        ],
        "summary": "Returns all FAQ articles.",
        "responses": {
          "200": {
            "description": "The collection of FAQ articles was returned successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FaqArticleDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FaqArticleDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FaqArticleDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request! See json response for details",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error! See json response for details",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Faq"
        ],
        "summary": "Allows to edit a FAQ info.",
        "requestBody": {
          "description": "The DonorApp.Services.DTO.FaqArticleDto instance that represents a FAQ to edit.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FaqArticleDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/FaqArticleDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/FaqArticleDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "FAQ was successfully edited.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FaqArticleDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FaqArticleDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FaqArticleDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request! See json response for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error! See json response for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/faqs/filter": {
      "post": {
        "tags": [
          "Faq"
        ],
        "summary": "Gets all FAQs by filter.",
        "requestBody": {
          "description": "The DonorApp.DataProvider.Entities.Filters.FaqFilter instance that represents a FAQ filter.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FaqFilter"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/FaqFilter"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/FaqFilter"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Collection of FAQs",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FaqArticleDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FaqArticleDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FaqArticleDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error! See json response for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/faqs/{id}": {
      "delete": {
        "tags": [
          "Faq"
        ],
        "summary": "Allows to delete FAQ article.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "FAQ article was successfully deleted.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad request! See json response for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error! See json response for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/faqs/category": {
      "post": {
        "tags": [
          "Faq"
        ],
        "summary": "Add new FAQ`s category",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FaqCategoryDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/FaqCategoryDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/FaqCategoryDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "FAQ`s category was added successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FaqCategoryDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FaqCategoryDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FaqCategoryDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request! See json response for details",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error! See json response for details",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Faq"
        ],
        "summary": "Edit a FAQ`s Category info.",
        "requestBody": {
          "description": "The DonorApp.Services.DTO.FaqCategoryDto instance that represents a FAQ`s Category to edit.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FaqCategoryDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/FaqCategoryDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/FaqCategoryDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "FAQ`s Category was successfully edited.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FaqCategoryDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FaqCategoryDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FaqCategoryDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request! See json response for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error! See json response for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/faqs/categories": {
      "get": {
        "tags": [
          "Faq"
        ],
        "summary": "Gets all FAQ`s categories.",
        "responses": {
          "200": {
            "description": "Collection of FAQ's categories",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FaqCategoryDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FaqCategoryDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FaqCategoryDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error! See json response for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Faq"
        ],
        "summary": "Gets FAQ catgories by name.",
        "requestBody": {
          "description": "The DonorAppCore.Entity.FAQCategoryFilteringViewModel instance that represents a FAQ category name.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FAQCategoryFilteringViewModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/FAQCategoryFilteringViewModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/FAQCategoryFilteringViewModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Collection of FAQ categories",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FaqCategoryDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FaqCategoryDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FaqCategoryDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error! See json response for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/faqs/categories/{Id}": {
      "get": {
        "tags": [
          "Faq"
        ],
        "summary": "Get FAQ`s category by Id.",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return FAQ's category by Id",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FaqCategoryDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FaqCategoryDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FaqCategoryDto"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error! See json response for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/faqs/categories/{id}": {
      "delete": {
        "tags": [
          "Faq"
        ],
        "summary": "Allows to delete FAQ category.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "FAQ category was successfully deleted.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad request! See json response for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error! See json response for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Firebase": {
      "post": {
        "tags": [
          "Firebase"
        ],
        "summary": "Save PushToken to database",
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "PushToken was saved successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad request! See json response for details",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error! See json response for details",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/PushNotification": {
      "post": {
        "tags": [
          "Firebase"
        ],
        "summary": "Create new Push Notification",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PushNotificationDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PushNotificationDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PushNotificationDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Push Notification created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad request! See json response for details",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error! See json response for details",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Firebase"
        ],
        "summary": "Edit a Push Notification",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PushNotificationDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PushNotificationDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PushNotificationDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The Push Notification was successfully edited",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad request! See json response for details",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error! See json response for details",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Firebase"
        ],
        "summary": "Allows to delete a Push Notification.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Push Notification was successfully deleted.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad request! See json response for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error! See json response for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/PushNotifications": {
      "get": {
        "tags": [
          "Firebase"
        ],
        "summary": "Returns all Push Notifications.",
        "responses": {
          "200": {
            "description": "The collection of Push Notifications was returned successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad request! See json response for details",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error! See json response for details",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/PushNotifications/{userId}": {
      "get": {
        "tags": [
          "Firebase"
        ],
        "summary": "Returns Push Notifications for User.",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The collection of User Push Notifications was returned successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad request! See json response for details",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error! See json response for details",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/PushNotificationCategory": {
      "post": {
        "tags": [
          "Firebase"
        ],
        "summary": "Create a Push Notification Category.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PushNotificationCategoryDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PushNotificationCategoryDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PushNotificationCategoryDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Push Notification Category created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad request! See json response for details",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error! See json response for details",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Firebase"
        ],
        "summary": "Edit a Push Notification Category.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PushNotificationCategoryDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PushNotificationCategoryDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PushNotificationCategoryDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The Push Notification Category was successfully edited",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad request! See json response for details",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error! See json response for details",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/PushNotificationCategories": {
      "get": {
        "tags": [
          "Firebase"
        ],
        "summary": "Get a list of Push Notification Categories.",
        "responses": {
          "200": {
            "description": "The collection of Push Notification Categories was returned successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad request! See json response for details",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error! See json response for details",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/PushNotificationCategory/{id}": {
      "delete": {
        "tags": [
          "Firebase"
        ],
        "summary": "Allows to delete Push Notification category.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Push Notification category was successfully deleted.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad request! See json response for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error! See json response for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/PushNotification/IsDisabled": {
      "put": {
        "tags": [
          "Firebase"
        ],
        "summary": "Enable/Disable PushNotification",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PushNotificationDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PushNotificationDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PushNotificationDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "PushNotification was enabled/disabled successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad request! See json response for details",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error! See json response for details",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/PushNotificationCategory/IsDisabled": {
      "put": {
        "tags": [
          "Firebase"
        ],
        "summary": "Enable/Disable PushNotificationCategory",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PushNotificationCategoryDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PushNotificationCategoryDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PushNotificationCategoryDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "PushNotificationCategory was enabled/disabled successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad request! See json response for details",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error! See json response for details",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/PushNotification/Send": {
      "post": {
        "tags": [
          "Firebase"
        ],
        "summary": "Send PushNotifications for specific tokens",
        "parameters": [
          {
            "name": "pushNotificationId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "PushNotification sended successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad request! See json response for details",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error! See json response for details",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/PushNotification/SendScheduled": {
      "post": {
        "tags": [
          "Firebase"
        ],
        "summary": "Send Scheduled PushNotifications for specific tokens",
        "parameters": [
          {
            "name": "pushNotificationId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "cronExpression",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "PushNotification scheduled successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad request! See json response for details",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error! See json response for details",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/PushNotificationTriggers": {
      "get": {
        "tags": [
          "Firebase"
        ],
        "summary": "Get a list of Push Notification Triggers.",
        "responses": {
          "200": {
            "description": "The collection of Push Notification Triggers was returned successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad request! See json response for details",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error! See json response for details",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/regions": {
      "get": {
        "tags": [
          "Location"
        ],
        "summary": "Gets all regions",
        "responses": {
          "200": {
            "description": "Collection of regions",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RegionDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RegionDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RegionDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error! See json response for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/cities": {
      "get": {
        "tags": [
          "Location"
        ],
        "summary": "Gets cities by filter",
        "parameters": [
          {
            "name": "RegionIds",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "Search",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Collection of cities",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CityDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CityDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CityDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error! See json response for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/verification/sendPhoneCode": {
      "post": {
        "tags": [
          "PhoneNumberVerification"
        ],
        "summary": "Used to add a user's phone number.",
        "requestBody": {
          "description": "The DonorAppCore.Entity.AddPhoneNumberViewModel instance that represents the phone number to add.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddPhoneNumberViewModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddPhoneNumberViewModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddPhoneNumberViewModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful completion of adding a phone number.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad request! See json response for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error! See json response for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/verification/verifyPhoneCode": {
      "post": {
        "tags": [
          "PhoneNumberVerification"
        ],
        "summary": "Used to verify a user's phone number.",
        "requestBody": {
          "description": "The DonorAppCore.Entity.VerifyPhoneNumberViewModel instance that represents the phone number for verification.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyPhoneNumberViewModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyPhoneNumberViewModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyPhoneNumberViewModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful completion of verifying a phone number.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad request! See json response for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error! See json response for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/test": {
      "get": {
        "tags": [
          "Test"
        ],
        "summary": "Status and health check.",
        "responses": {
          "200": {
            "description": "Successful completion of the test call."
          },
          "400": {
            "description": "Bad request! See json response for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error! See json response for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/phoneTest": {
      "get": {
        "tags": [
          "Test"
        ],
        "summary": "Phone token !!Unable to render embedded object: File (FOR INTERNAL USAGE ONLY) not found.!!",
        "parameters": [
          {
            "name": "phoneNumber",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Phone verification token",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad request! See json response for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error! See json response for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/user/allUsers": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Search and return the list of users using a special filter",
        "requestBody": {
          "description": "Search and return the list of users using a special filter. \r\n           Example, if you want return all users and admins {\"search\": \"\",\"status\": 0,\"role\": [\"admin\",\"user\"]} \r\n           Example if you want return all admins{'search': '','status': 0,'role': ['admin']}\r\n           Status has 4 positions: 0 - All positions, 1 - Active users, 2 - Requested users, 3 - Locked users.\r\n           An instance of the interface representing the users with specified filter property",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserFilter"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserFilter"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserFilter"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns collection of users, filtered by specified property.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BaseUserDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BaseUserDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BaseUserDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request! See json response for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error! See json response for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/user/badges": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Badges list by User",
        "responses": {
          "200": {
            "description": "Returns collection of badges by User.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BadgeDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BadgeDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BadgeDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request! See json response for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error! See json response for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Add to Badges to User",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddBadgesToUserViewModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddBadgesToUserViewModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddBadgesToUserViewModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns collection of badges by User.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BadgeDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BadgeDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BadgeDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request! See json response for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error! See json response for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/user/faqs": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Favorite list of FAQs by User",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns collection of FAQs by User.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad request! See json response for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error! See json response for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/user/registration": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Gives the opportunity to process the registration form.",
        "requestBody": {
          "description": "The DonorAppCore.Controllers.RegistrationViewModel instance that represents all the data required for user registration.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationViewModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationViewModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationViewModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful completion of the registration.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request! See json response for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error! See json response for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/user/login": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Allows the user to log in to the created account.",
        "requestBody": {
          "description": "The DonorAppCore.Entity.UserLoginViewModel instance that represents required user data required to log in to the account.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserLoginViewModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserLoginViewModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserLoginViewModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful completion of the account login.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request! See json response for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LockedUserDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LockedUserDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LockedUserDto"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error! See json response for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/user/adminLogin": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Allows admin to log in to the created account.",
        "requestBody": {
          "description": "The DonorAppCore.Entity.AdminLoginViewModel instance that represents required admin data required to log in to the account.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdminLoginViewModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AdminLoginViewModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AdminLoginViewModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful completion of the account login.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request! See json response for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error! See json response for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/user/validate": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Used to vadidate user data.",
        "requestBody": {
          "description": "The DonorAppCore.Entity.BaseUserViewModel instance that represents data for user validation>",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BaseUserViewModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BaseUserViewModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BaseUserViewModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful user data validation.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad request! See json response for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error! See json response for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/user/refresh": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Updates expired token.",
        "requestBody": {
          "description": "User`s expired token and refresh token.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenViewModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenViewModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenViewModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Token successfully updated.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request! See json response for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error! See json response for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/user/phonenumber": {
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Updates user`s phone number.",
        "requestBody": {
          "description": "The DonorAppCore.Entity.UpdatePhoneNumberViewModel instance that represents required data to update phone number.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePhoneNumberViewModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePhoneNumberViewModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePhoneNumberViewModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Phone number successfully updated.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad request! See json response for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error! See json response for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/user/sendReset/Email": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Sends email with reset password token.",
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "description": "User`s email.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Email was successfully sent.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad request! See json response for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error! See json response for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/user/isValidCode/{email}/{securityToken}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Used to validate reset password token.",
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "description": "User`s email.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "securityToken",
            "in": "path",
            "description": "Token to validation.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful reset password token validation.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "Bad request! See json response for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error! See json response for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/user/resetPassword/Email": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Updates admin`s password.",
        "requestBody": {
          "description": "The DonorAppCore.Entity.ResetPasswordByEmailViewModel instance that represents required data to update password.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordByEmailViewModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordByEmailViewModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordByEmailViewModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password successfully updated.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad request! See json response for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error! See json response for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/user/password": {
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Change password for User using phone number",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserChangePasswordModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserChangePasswordModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserChangePasswordModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password was successfully updated",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad request! See json responce for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error! See json responce for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Used to create password after invitation.",
        "requestBody": {
          "description": "DonorAppCore.Entity.CreatePasswordViewModelPassword + email.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePasswordViewModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePasswordViewModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePasswordViewModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password created is correct.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad request! See json response for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error! See json response for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/user/sendReset/Sms": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Sends SMS with reset password token.",
        "parameters": [
          {
            "name": "phoneNumber",
            "in": "query",
            "description": "User`s phone number.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "SMS was successfully sent.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad request! See json response for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error! See json response for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/user/sendReset/Sms/verify": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Code verifying by token",
        "requestBody": {
          "description": "The DonorAppCore.Entity.VerifyPhoneNumberViewModel instance that represents required data to verify code.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyPhoneNumberViewModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyPhoneNumberViewModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyPhoneNumberViewModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/user/resetPassword/Sms": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Updates user`s password.",
        "requestBody": {
          "description": "The DonorAppCore.Entity.ResetPasswordBySmsViewModel instance that represents required data to update password.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordBySmsViewModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordBySmsViewModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordBySmsViewModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password successfully updated.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad request! See json response for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error! See json response for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/user/privacypolicy": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get privacy policy",
        "responses": {
          "200": {
            "description": "Privacy policy successfully obtained",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad request! See json response for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error! See json response for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/user/Holidays": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get holidays",
        "responses": {
          "200": {
            "description": "Holidays successfully obtained",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Holiday"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Holiday"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Holiday"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request! See json response for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error! See json response for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/user/donation": {
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Сompletion of the Donation",
        "requestBody": {
          "description": "The DonorApp.Services.DTO.DonationDto instance that represents a donation type to complete.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DonationDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DonationDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DonationDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Donation succesfully completed",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DonationDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DonationDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DonationDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request! See json responce for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error! See json responce for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/user/donations/{userId}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get list of donations",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of donations were successfully received",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Donation"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Donation"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Donation"
                }
              }
            }
          },
          "400": {
            "description": "Bad request! See json response for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error! See json response for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/user/addAdmin": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Send invitation for admin",
        "requestBody": {
          "description": "The DonorAppCore.Entity.AdminInvitationViewModel instance that represents required data to invite admin.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdminInvitationViewModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AdminInvitationViewModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AdminInvitationViewModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Invitation was sent on user email.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ConflictResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConflictResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConflictResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad request! See json response for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error! See json response for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/user/{userId}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Used to recieve user by Id.",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "System.StringUser id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User returned successfully.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DonorUserContactInfoDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DonorUserContactInfoDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DonorUserContactInfoDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request! See json response for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error! See json response for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/user/me": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Getting info about authenticated user by token.",
        "parameters": [
          {
            "name": "userToken",
            "in": "query",
            "description": "System.StringUser token",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User returned successfully.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad request! See json response for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error! See json response for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Edit users' information",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DonorUserDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DonorUserDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DonorUserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User's information was changed successfully.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad request! See json response for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error! See json response for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/user/{userEmail}/block": {
      "post": {
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "userEmail",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User was blocked successfully.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad request! See json response for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error! See json response for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/user/{userEmail}/unblock": {
      "post": {
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "userEmail",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User was unblocked successfully.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad request! See json response for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error! See json response for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/user/bulkDelete": {
      "delete": {
        "tags": [
          "User"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Users were deleted successfully."
          },
          "400": {
            "description": "Bad request! See json response for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error! See json response for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/user/me/photo": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Read users' photos",
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User's photo was read successfully.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad request! See json response for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error! See json response for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Upload users' photo",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UploadPhotoDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UploadPhotoDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UploadPhotoDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User's photo was uploaded successfully.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad request! See json response for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error! See json response for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/user": {
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "Deletes user",
        "parameters": [
          {
            "name": "phoneNumber",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reasonId",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "details",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User has been successfully deleted.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad request! See json response for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error! See json response for details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AddBadgesToUserViewModel": {
        "required": [
          "userId"
        ],
        "type": "object",
        "properties": {
          "userId": {
            "minLength": 1,
            "type": "string"
          },
          "badgesIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AddPhoneNumberViewModel": {
        "required": [
          "phoneNumber"
        ],
        "type": "object",
        "properties": {
          "phoneNumber": {
            "minLength": 1,
            "type": "string",
            "format": "tel"
          }
        },
        "additionalProperties": false
      },
      "AdminInvitationViewModel": {
        "required": [
          "email",
          "lastName",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "minLength": 2,
            "type": "string"
          },
          "lastName": {
            "minLength": 2,
            "type": "string"
          },
          "email": {
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9_\\.-]+@([a-zA-Z0-9-]+\\.)+[a-zA-Z]{2,6}$",
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "AdminLoginViewModel": {
        "required": [
          "email",
          "password"
        ],
        "type": "object",
        "properties": {
          "email": {
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9_\\.-]+@([a-zA-Z0-9-]+\\.)+[a-zA-Z]{2,6}$",
            "type": "string"
          },
          "password": {
            "minLength": 8,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Badge": {
        "required": [
          "created",
          "description",
          "name",
          "picture",
          "updated"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "description": {
            "minLength": 1,
            "type": "string"
          },
          "picture": {
            "minLength": 1,
            "type": "string"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "$ref": "#/components/schemas/DonorUser"
          },
          "lastUpdatedBy": {
            "$ref": "#/components/schemas/DonorUser"
          },
          "userBadges": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserBadge"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BadgeDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "picture": {
            "type": "string",
            "nullable": true
          },
          "createDate": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string",
            "nullable": true
          },
          "updateDate": {
            "type": "string",
            "format": "date-time"
          },
          "lastUpdatedBy": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BaseUserDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/UserStatuses"
          },
          "role": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BaseUserViewModel": {
        "required": [
          "email",
          "phoneNumber"
        ],
        "type": "object",
        "properties": {
          "email": {
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9_\\.-]+@([a-zA-Z0-9-]+\\.)+[a-zA-Z]{2,6}$",
            "type": "string"
          },
          "phoneNumber": {
            "minLength": 8,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Certificate": {
        "required": [
          "donation",
          "picture"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "donation": {
            "$ref": "#/components/schemas/Donation"
          },
          "picture": {
            "type": "string",
            "format": "byte"
          },
          "pictureName": {
            "type": "string",
            "nullable": true
          },
          "pictureSize": {
            "type": "number",
            "format": "double"
          },
          "createDate": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "$ref": "#/components/schemas/CertificateStatus"
          }
        },
        "additionalProperties": false
      },
      "CertificateDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "createDate": {
            "type": "string",
            "format": "date-time"
          },
          "picture": {
            "type": "string",
            "format": "byte",
            "nullable": true
          },
          "pictureName": {
            "type": "string",
            "nullable": true
          },
          "pictureSize": {
            "type": "number",
            "format": "double"
          },
          "status": {
            "$ref": "#/components/schemas/CertificateStatus"
          }
        },
        "additionalProperties": false
      },
      "CertificateStatus": {
        "enum": [
          1,
          2,
          3,
          4,
          5
        ],
        "type": "integer",
        "format": "int32"
      },
      "City": {
        "required": [
          "cityName",
          "region"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "cityName": {
            "minLength": 1,
            "type": "string"
          },
          "regionId": {
            "type": "integer",
            "format": "int32"
          },
          "region": {
            "$ref": "#/components/schemas/Region"
          },
          "donationCenters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DonationCenter"
            },
            "nullable": true
          },
          "donations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Donation"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CityDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "regionId": {
            "type": "integer",
            "format": "int32"
          },
          "regionName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ConflictResult": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ContentResult": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string",
            "nullable": true
          },
          "contentType": {
            "type": "string",
            "nullable": true
          },
          "statusCode": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreatePasswordViewModel": {
        "type": "object",
        "properties": {
          "inviteToken": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "passwordConfirm": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Donation": {
        "required": [
          "bloodType",
          "city",
          "date",
          "donationCenter",
          "donationStatus",
          "user"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "user": {
            "$ref": "#/components/schemas/DonorUser"
          },
          "bloodType": {
            "minLength": 1,
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "donationCenter": {
            "$ref": "#/components/schemas/DonationCenter"
          },
          "city": {
            "$ref": "#/components/schemas/City"
          },
          "donationType": {
            "$ref": "#/components/schemas/DonationType"
          },
          "donationStatus": {
            "$ref": "#/components/schemas/DonationStatuses"
          },
          "bloodVolume": {
            "type": "integer",
            "format": "int32"
          },
          "healthFeeling": {
            "$ref": "#/components/schemas/HealthFeeling"
          },
          "feelingComment": {
            "type": "string",
            "nullable": true
          },
          "experienceRate": {
            "type": "integer",
            "format": "int32"
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "certificates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Certificate"
            },
            "nullable": true
          },
          "quickComments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QuickComment"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DonationCenter": {
        "required": [
          "address",
          "comment",
          "createdDate",
          "name",
          "phoneNumbers",
          "updatedDate",
          "visibleDays"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "city": {
            "$ref": "#/components/schemas/City"
          },
          "address": {
            "minLength": 1,
            "type": "string"
          },
          "comment": {
            "minLength": 1,
            "type": "string"
          },
          "phoneNumbers": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "latitude": {
            "type": "number",
            "format": "double"
          },
          "longitude": {
            "type": "number",
            "format": "double"
          },
          "visibleDays": {
            "type": "boolean"
          },
          "dutySchedule": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "updatedDate": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "$ref": "#/components/schemas/DonorUser"
          },
          "lastUpdatedBy": {
            "$ref": "#/components/schemas/DonorUser"
          },
          "donations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Donation"
            },
            "nullable": true
          },
          "workSchedules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkSchedule"
            },
            "nullable": true
          },
          "linkOnTelegram": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DonationCenterDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "region": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "phones": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "latitude": {
            "type": "number",
            "format": "double"
          },
          "longitude": {
            "type": "number",
            "format": "double"
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "updatedDate": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedBy": {
            "type": "string",
            "nullable": true
          },
          "createdByName": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedByName": {
            "type": "string",
            "nullable": true
          },
          "visibleDays": {
            "type": "boolean"
          },
          "dutySchedule": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "workSchedules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkScheduleDto"
            },
            "nullable": true
          },
          "linkOnTelegram": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DonationDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "userId": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "bloodType": {
            "type": "string",
            "nullable": true
          },
          "donationTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "cityId": {
            "type": "integer",
            "format": "int32"
          },
          "donationCenterId": {
            "type": "integer",
            "format": "int32"
          },
          "donationStatus": {
            "$ref": "#/components/schemas/DonationStatuses"
          },
          "bloodVolume": {
            "type": "integer",
            "format": "int32"
          },
          "healthFeeling": {
            "$ref": "#/components/schemas/HealthFeeling"
          },
          "feelingComment": {
            "type": "string",
            "nullable": true
          },
          "certificates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CertificateDto"
            },
            "nullable": true
          },
          "experienceRate": {
            "type": "integer",
            "format": "int32"
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "quickComments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QuickCommentDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DonationFilter": {
        "type": "object",
        "properties": {
          "fullName": {
            "type": "string",
            "nullable": true
          },
          "bloodType": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "dateFrom": {
            "type": "string",
            "format": "date-time"
          },
          "dateTo": {
            "type": "string",
            "format": "date-time"
          },
          "donationTypeIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "regionIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "cityIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "donationCenterIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "status": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "bloodVolume": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "page": {
            "$ref": "#/components/schemas/PageFilter"
          }
        },
        "additionalProperties": false
      },
      "DonationStatuses": {
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6,
          7
        ],
        "type": "integer",
        "format": "int32"
      },
      "DonationType": {
        "required": [
          "headerColor",
          "iconBase64",
          "longDescription",
          "name",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "lastUpdatedBy": {
            "$ref": "#/components/schemas/DonorUser"
          },
          "updateDate": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "$ref": "#/components/schemas/DonorUser"
          },
          "createDate": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "shortDescription": {
            "minLength": 1,
            "type": "string"
          },
          "longDescription": {
            "minLength": 1,
            "type": "string"
          },
          "iconBase64": {
            "minLength": 1,
            "type": "string"
          },
          "headerColor": {
            "minLength": 1,
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/DonationTypeStatuses"
          }
        },
        "additionalProperties": false
      },
      "DonationTypeDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "shortDescription": {
            "type": "string",
            "nullable": true
          },
          "longDescription": {
            "type": "string",
            "nullable": true
          },
          "iconData": {
            "type": "string",
            "nullable": true
          },
          "createDate": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string",
            "nullable": true
          },
          "updateDate": {
            "type": "string",
            "format": "date-time"
          },
          "lastUpdatedBy": {
            "type": "string",
            "nullable": true
          },
          "headerColor": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DonationTypeStatuses": {
        "enum": [
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "DonorUser": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "normalizedUserName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "normalizedEmail": {
            "type": "string",
            "nullable": true
          },
          "emailConfirmed": {
            "type": "boolean"
          },
          "passwordHash": {
            "type": "string",
            "nullable": true
          },
          "securityStamp": {
            "type": "string",
            "nullable": true
          },
          "concurrencyStamp": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "phoneNumberConfirmed": {
            "type": "boolean"
          },
          "twoFactorEnabled": {
            "type": "boolean"
          },
          "lockoutEnd": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lockoutEnabled": {
            "type": "boolean"
          },
          "accessFailedCount": {
            "type": "integer",
            "format": "int32"
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "nickname": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/UserStatuses"
          },
          "bloodType": {
            "type": "string",
            "nullable": true
          },
          "index": {
            "type": "string",
            "nullable": true
          },
          "refreshToken": {
            "type": "string",
            "nullable": true
          },
          "age": {
            "type": "string",
            "format": "date-time"
          },
          "longLockout": {
            "type": "boolean"
          },
          "rhesusFactor": {
            "$ref": "#/components/schemas/RhesusFactor"
          },
          "photo": {
            "type": "string",
            "format": "byte",
            "nullable": true
          },
          "sex": {
            "$ref": "#/components/schemas/Sex"
          },
          "donations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Donation"
            },
            "nullable": true
          },
          "userBadges": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserBadge"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DonorUserContactInfoDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DonorUserDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "index": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "emailConfirmed": {
            "type": "boolean"
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "age": {
            "type": "string",
            "format": "date-time"
          },
          "bloodType": {
            "type": "string",
            "nullable": true
          },
          "rhesusFactor": {
            "$ref": "#/components/schemas/RhesusFactor"
          },
          "photo": {
            "type": "string",
            "format": "byte",
            "nullable": true
          },
          "sex": {
            "$ref": "#/components/schemas/Sex"
          },
          "successfulDonations": {
            "type": "integer",
            "format": "int32"
          },
          "daysBeforeNextDonation": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "faqIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FAQCategoryFilteringViewModel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FaqArticleDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "question": {
            "type": "string",
            "nullable": true
          },
          "answer": {
            "type": "string",
            "nullable": true
          },
          "picture": {
            "type": "string",
            "nullable": true
          },
          "isDraft": {
            "type": "boolean"
          },
          "isPermanent": {
            "type": "boolean"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "format": "date-time"
          },
          "category": {
            "$ref": "#/components/schemas/FaqCategoryDto"
          },
          "relatedQuestions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelatedFaqArticleDto"
            },
            "nullable": true
          },
          "createdBy": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedBy": {
            "type": "string",
            "nullable": true
          },
          "createdByName": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedByName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FaqCategoryDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "picture": {
            "type": "string",
            "nullable": true
          },
          "faqArticlesCount": {
            "type": "integer",
            "format": "int32"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedBy": {
            "type": "string",
            "nullable": true
          },
          "createdByName": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedByName": {
            "type": "string",
            "nullable": true
          },
          "isPermanent": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "FaqFilter": {
        "type": "object",
        "properties": {
          "categoryId": {
            "type": "integer",
            "format": "int32"
          },
          "isDraft": {
            "type": "boolean",
            "nullable": true
          },
          "createdBy": {
            "type": "string",
            "nullable": true
          },
          "search": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "HealthFeeling": {
        "enum": [
          1,
          2,
          3,
          4,
          5
        ],
        "type": "integer",
        "format": "int32"
      },
      "Holiday": {
        "required": [
          "date",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "LockedUserDto": {
        "type": "object",
        "properties": {
          "lockoutEnd": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "longLockout": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "PageFilter": {
        "type": "object",
        "properties": {
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "packageSize": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PushNotificationCategoryDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "picture": {
            "type": "string",
            "nullable": true
          },
          "pushNotificationsCount": {
            "type": "integer",
            "format": "int32"
          },
          "createdById": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedById": {
            "type": "string",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "format": "date-time"
          },
          "isDisabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "PushNotificationDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "categoryId": {
            "type": "integer",
            "format": "int32"
          },
          "triggerId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "shortDescription": {
            "type": "string",
            "nullable": true
          },
          "longDescription": {
            "type": "string",
            "nullable": true
          },
          "notificationDistribution": {
            "type": "string",
            "format": "date-time"
          },
          "createdById": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedById": {
            "type": "string",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "format": "date-time"
          },
          "isDisabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "QuickComment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "category": {
            "$ref": "#/components/schemas/QuickCommentCategory"
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "donations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Donation"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "QuickCommentCategory": {
        "enum": [
          1,
          2,
          3
        ],
        "type": "integer",
        "format": "int32"
      },
      "QuickCommentDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "comment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RefreshTokenViewModel": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "nullable": true
          },
          "refreshToken": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Region": {
        "required": [
          "cities",
          "regionName"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "regionName": {
            "minLength": 1,
            "type": "string"
          },
          "cities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/City"
            }
          }
        },
        "additionalProperties": false
      },
      "RegionDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RegistrationViewModel": {
        "required": [
          "email",
          "firstName",
          "lastName",
          "password",
          "phoneNumber"
        ],
        "type": "object",
        "properties": {
          "email": {
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9_\\.-]+@([a-zA-Z0-9-]+\\.)+[a-zA-Z]{2,6}$",
            "type": "string"
          },
          "phoneNumber": {
            "minLength": 8,
            "type": "string"
          },
          "firstName": {
            "maxLength": 50,
            "minLength": 2,
            "type": "string"
          },
          "lastName": {
            "maxLength": 50,
            "minLength": 2,
            "type": "string"
          },
          "password": {
            "minLength": 8,
            "type": "string"
          },
          "passwordConfirm": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RelatedFaqArticleDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ResetPasswordByEmailViewModel": {
        "required": [
          "email",
          "password",
          "passwordConfirm",
          "securityToken"
        ],
        "type": "object",
        "properties": {
          "email": {
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9_\\.-]+@([a-zA-Z0-9-]+\\.)+[a-zA-Z]{2,6}$",
            "type": "string"
          },
          "securityToken": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "password": {
            "minLength": 1,
            "type": "string"
          },
          "passwordConfirm": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ResetPasswordBySmsViewModel": {
        "required": [
          "password",
          "passwordConfirm",
          "phoneNumber",
          "verificationToken"
        ],
        "type": "object",
        "properties": {
          "phoneNumber": {
            "minLength": 1,
            "type": "string",
            "format": "tel"
          },
          "verificationToken": {
            "minLength": 1,
            "type": "string"
          },
          "password": {
            "minLength": 1,
            "type": "string"
          },
          "passwordConfirm": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "RhesusFactor": {
        "enum": [
          1,
          2,
          3
        ],
        "type": "integer",
        "format": "int32"
      },
      "Sex": {
        "enum": [
          1,
          2,
          3
        ],
        "type": "integer",
        "format": "int32"
      },
      "UpdatePhoneNumberViewModel": {
        "required": [
          "phoneNumber",
          "verificationCode"
        ],
        "type": "object",
        "properties": {
          "verificationCode": {
            "minLength": 1,
            "type": "string"
          },
          "phoneNumber": {
            "minLength": 1,
            "type": "string",
            "format": "tel"
          }
        },
        "additionalProperties": false
      },
      "UploadPhotoDto": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "nullable": true
          },
          "base64": {
            "type": "string",
            "format": "byte",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserBadge": {
        "required": [
          "badge",
          "user"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "user": {
            "$ref": "#/components/schemas/DonorUser"
          },
          "badge": {
            "$ref": "#/components/schemas/Badge"
          }
        },
        "additionalProperties": false
      },
      "UserChangePasswordModel": {
        "required": [
          "oldPassword",
          "password",
          "phoneNumber"
        ],
        "type": "object",
        "properties": {
          "phoneNumber": {
            "minLength": 1,
            "type": "string",
            "format": "tel"
          },
          "oldPassword": {
            "minLength": 1,
            "type": "string"
          },
          "password": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "UserDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/UserStatuses"
          },
          "role": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "refreshToken": {
            "type": "string",
            "nullable": true
          },
          "token": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserFilter": {
        "type": "object",
        "properties": {
          "search": {
            "maxLength": 200,
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/UserStatuses"
          },
          "role": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserLoginViewModel": {
        "required": [
          "password",
          "phoneNumber"
        ],
        "type": "object",
        "properties": {
          "phoneNumber": {
            "minLength": 8,
            "type": "string"
          },
          "password": {
            "minLength": 8,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "UserStatuses": {
        "enum": [
          1,
          2,
          3
        ],
        "type": "integer",
        "format": "int32"
      },
      "VerifyPhoneNumberViewModel": {
        "required": [
          "phoneNumber",
          "verificationCode"
        ],
        "type": "object",
        "properties": {
          "verificationCode": {
            "minLength": 1,
            "type": "string"
          },
          "phoneNumber": {
            "minLength": 1,
            "type": "string",
            "format": "tel"
          }
        },
        "additionalProperties": false
      },
      "WorkSchedule": {
        "required": [
          "workDay",
          "workTimeFrom",
          "workTimeTo"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "workDay": {
            "minLength": 1,
            "type": "string"
          },
          "workTimeFrom": {
            "type": "string",
            "format": "date-span"
          },
          "workTimeTo": {
            "type": "string",
            "format": "date-span"
          },
          "donationCenterId": {
            "type": "integer",
            "format": "int32"
          },
          "donationCenter": {
            "$ref": "#/components/schemas/DonationCenter"
          }
        },
        "additionalProperties": false
      },
      "WorkScheduleDto": {
        "type": "object",
        "properties": {
          "workDay": {
            "type": "string",
            "nullable": true
          },
          "workTimeFrom": {
            "type": "string",
            "nullable": true
          },
          "workTimeTo": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "Please insert JWT with Bearer into field",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}